import { Type } from 'class-transformer';
import {
    IsArray,
    IsBoolean,
    IsDate,
    IsDefined,
    IsEnum,
    IsNotEmpty,
    IsOptional
} from 'class-validator';

export enum VulnerabilityPolicyType {
    BLACKLIST = 'BLACKLIST'
}

export class VulnerabilityPolicy {
    @IsNotEmpty()
    id!: string;

    @IsNotEmpty()
    name!: string;

    @IsNotEmpty()
    description!: string;

    @IsDefined()
    @IsEnum(VulnerabilityPolicyType)
    policy_type!: VulnerabilityPolicyType;

    @IsBoolean()
    default!: boolean;

    @IsOptional()
    @Type()
    created_by?: string;

    @IsDate()
    @Type(() => Date)
    created_on!: Date;

    @IsNotEmpty()
    @IsArray()
    content!: string[]; // Array of vulnerability IDs (CVEs, aliases)
}

export interface VulnerabilitySearchResult {
    id: string;
    aliases: string[];
    description: string;
    severity?: string;
    published_date?: string;
    source: 'NVD' | 'OSV';
    sources?: Array<{
        id: string;
        source: 'NVD' | 'OSV';
        description: string;
        severity?: string;
        published_date?: string;
    }>;
}
